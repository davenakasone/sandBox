$date
	Wed Sep  1 13:04:01 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module brs_log_TB $end
$var wire 8 ! OUT_Y [7:0] $end
$var reg 8 " INP_X [7:0] $end
$var reg 3 # SC [2:0] $end
$var integer 32 $ idx [31:0] $end
$scope module DUT $end
$var wire 8 % inp_x [7:0] $end
$var wire 3 & shift_ct [2:0] $end
$var wire 8 ' w_2_to_4 [7:0] $end
$var wire 8 ( w_1_to_2 [7:0] $end
$var wire 8 ) stop [7:0] $end
$var reg 8 * outp_y [7:0] $end
$var reg 8 + r_1_to_2 [7:0] $end
$var reg 8 , r_2_to_4 [7:0] $end
$var reg 8 - start [7:0] $end
$scope module level1 $end
$var wire 8 . in_x [7:0] $end
$var wire 1 / selector $end
$var reg 8 0 out_y [7:0] $end
$upscope $end
$scope module level2 $end
$var wire 8 1 in_x [7:0] $end
$var wire 1 2 selector $end
$var reg 8 3 out_y [7:0] $end
$upscope $end
$scope module level3 $end
$var wire 8 4 in_x [7:0] $end
$var wire 1 5 selector $end
$var reg 8 6 out_y [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111111 6
05
b11111111 4
b11111111 3
02
b11111111 1
b11111111 0
0/
b11111111 .
b11111111 -
b11111111 ,
b11111111 +
b11111111 *
b11111111 )
b11111111 (
b11111111 '
b0 &
b11111111 %
bx $
b0 #
b11111111 "
b11111111 !
$end
#5
b0 !
b0 *
b0 )
b0 6
b0 ,
b0 4
b0 '
b0 3
b0 +
b0 1
b0 (
b0 0
b0 -
b0 .
b0 "
b0 %
#10
b11111111 !
b11111111 *
b11111111 )
b11111111 6
b11111111 ,
b11111111 4
b11111111 '
b11111111 3
b11111111 +
b11111111 1
b11111111 (
b11111111 0
b11111111 -
b11111111 .
b11111111 "
b11111111 %
#15
b0 $
#20
b1111111 !
b1111111 *
b1111111 )
b1111111 6
b1111111 ,
b1111111 4
b1111111 '
b1111111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#25
b111111 !
b111111 *
b111111 )
b111111 6
b111111 ,
b111111 4
b111111 '
b111111 3
b111111 +
b111111 1
b111111 (
b111111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#30
b11111 !
b11111 *
b11111 )
b11111 6
b11111 ,
b11111 4
b11111 '
b11111 3
b11111 +
b11111 1
b11111 (
b11111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#35
b1111 !
b1111 *
b1111 )
b1111 6
b1111 ,
b1111 4
b1111 '
b1111 3
b1111 +
b1111 1
b1111 (
b1111 0
b1111 -
b1111 .
b100 $
b1111 "
b1111 %
#40
b111 !
b111 *
b111 )
b111 6
b111 ,
b111 4
b111 '
b111 3
b111 +
b111 1
b111 (
b111 0
b111 -
b111 .
b101 $
b111 "
b111 %
#45
b11 !
b11 *
b11 )
b11 6
b11 ,
b11 4
b11 '
b11 3
b11 +
b11 1
b11 (
b11 0
b11 -
b11 .
b110 $
b11 "
b11 %
#50
b1 !
b1 *
b1 )
b1 6
b1 ,
b1 4
b1 '
b1 3
b1 +
b1 1
b1 (
b1 0
b1 -
b1 .
b111 $
b1 "
b1 %
#55
b0 !
b0 *
b0 )
b0 6
b0 ,
b0 4
b0 '
b0 3
b0 +
b0 1
b0 (
b0 0
b0 -
b0 .
b1000 $
b0 "
b0 %
#60
b1111111 !
b1111111 *
b1111111 )
b1111111 6
b1111111 ,
b1111111 4
b1111111 '
b1111111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
1/
b11111111 -
b11111111 .
b1 #
b1 &
b11111111 "
b11111111 %
b0 $
#65
b111111 !
b111111 *
b111111 )
b111111 6
b111111 ,
b111111 4
b111111 '
b111111 3
b111111 +
b111111 1
b111111 (
b111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#70
b11111 !
b11111 *
b11111 )
b11111 6
b11111 ,
b11111 4
b11111 '
b11111 3
b11111 +
b11111 1
b11111 (
b11111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#75
b1111 !
b1111 *
b1111 )
b1111 6
b1111 ,
b1111 4
b1111 '
b1111 3
b1111 +
b1111 1
b1111 (
b1111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#80
b111 !
b111 *
b111 )
b111 6
b111 ,
b111 4
b111 '
b111 3
b111 +
b111 1
b111 (
b111 0
b1111 -
b1111 .
b100 $
b1111 "
b1111 %
#85
b11 !
b11 *
b11 )
b11 6
b11 ,
b11 4
b11 '
b11 3
b11 +
b11 1
b11 (
b11 0
b111 -
b111 .
b101 $
b111 "
b111 %
#90
b1 !
b1 *
b1 )
b1 6
b1 ,
b1 4
b1 '
b1 3
b1 +
b1 1
b1 (
b1 0
b11 -
b11 .
b110 $
b11 "
b11 %
#95
b0 !
b0 *
b0 )
b0 6
b0 ,
b0 4
b0 '
b0 3
b0 +
b0 1
b0 (
b0 0
b1 -
b1 .
b111 $
b1 "
b1 %
#100
b111111 !
b111111 *
b111111 )
b111111 6
b111111 ,
b111111 4
b111111 '
b111111 3
b11111111 +
b11111111 1
b11111111 (
b11111111 0
0/
12
b11111111 -
b11111111 .
b10 #
b10 &
b0 $
b11111111 "
b11111111 %
#105
b11111 !
b11111 *
b11111 )
b11111 6
b11111 ,
b11111 4
b11111 '
b11111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#110
b1111 !
b1111 *
b1111 )
b1111 6
b1111 ,
b1111 4
b1111 '
b1111 3
b111111 +
b111111 1
b111111 (
b111111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#115
b111 !
b111 *
b111 )
b111 6
b111 ,
b111 4
b111 '
b111 3
b11111 +
b11111 1
b11111 (
b11111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#120
b11 !
b11 *
b11 )
b11 6
b11 ,
b11 4
b11 '
b11 3
b1111 +
b1111 1
b1111 (
b1111 0
b1111 -
b1111 .
b100 $
b1111 "
b1111 %
#125
b1 !
b1 *
b1 )
b1 6
b1 ,
b1 4
b1 '
b1 3
b111 +
b111 1
b111 (
b111 0
b111 -
b111 .
b101 $
b111 "
b111 %
#130
b0 !
b0 *
b0 )
b0 6
b0 ,
b0 4
b0 '
b0 3
b11 +
b11 1
b11 (
b11 0
b11 -
b11 .
b110 $
b11 "
b11 %
#135
b11111 !
b11111 *
b11111 )
b11111 6
b11111 ,
b11111 4
b11111 '
b11111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
1/
b11111111 -
b11111111 .
b11 #
b11 &
b0 $
b11111111 "
b11111111 %
#140
b1111 !
b1111 *
b1111 )
b1111 6
b1111 ,
b1111 4
b1111 '
b1111 3
b111111 +
b111111 1
b111111 (
b111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#145
b111 !
b111 *
b111 )
b111 6
b111 ,
b111 4
b111 '
b111 3
b11111 +
b11111 1
b11111 (
b11111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#150
b11 !
b11 *
b11 )
b11 6
b11 ,
b11 4
b11 '
b11 3
b1111 +
b1111 1
b1111 (
b1111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#155
b1 !
b1 *
b1 )
b1 6
b1 ,
b1 4
b1 '
b1 3
b111 +
b111 1
b111 (
b111 0
b1111 -
b1111 .
b100 $
b1111 "
b1111 %
#160
b0 !
b0 *
b0 )
b0 6
b0 ,
b0 4
b0 '
b0 3
b11 +
b11 1
b11 (
b11 0
b111 -
b111 .
b101 $
b111 "
b111 %
#165
b1111 !
b1111 *
b1111 )
b1111 6
b11111111 ,
b11111111 4
b11111111 +
b11111111 1
b11111111 '
b11111111 3
b11111111 (
b11111111 0
0/
02
15
b11111111 -
b11111111 .
b100 #
b100 &
b0 $
b11111111 "
b11111111 %
#170
b111 !
b111 *
b111 )
b111 6
b1111111 ,
b1111111 4
b1111111 '
b1111111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#175
b11 !
b11 *
b11 )
b11 6
b111111 ,
b111111 4
b111111 '
b111111 3
b111111 +
b111111 1
b111111 (
b111111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#180
b1 !
b1 *
b1 )
b1 6
b11111 ,
b11111 4
b11111 '
b11111 3
b11111 +
b11111 1
b11111 (
b11111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#185
b0 !
b0 *
b0 )
b0 6
b1111 ,
b1111 4
b1111 '
b1111 3
b1111 +
b1111 1
b1111 (
b1111 0
b1111 -
b1111 .
b100 $
b1111 "
b1111 %
#190
b111 !
b111 *
b111 )
b111 6
b1111111 ,
b1111111 4
b1111111 '
b1111111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
1/
b11111111 -
b11111111 .
b101 #
b101 &
b0 $
b11111111 "
b11111111 %
#195
b11 !
b11 *
b11 )
b11 6
b111111 ,
b111111 4
b111111 '
b111111 3
b111111 +
b111111 1
b111111 (
b111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#200
b1 !
b1 *
b1 )
b1 6
b11111 ,
b11111 4
b11111 '
b11111 3
b11111 +
b11111 1
b11111 (
b11111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#205
b0 !
b0 *
b0 )
b0 6
b1111 ,
b1111 4
b1111 '
b1111 3
b1111 +
b1111 1
b1111 (
b1111 0
b11111 -
b11111 .
b11 $
b11111 "
b11111 %
#210
b11 !
b11 *
b11 )
b11 6
b111111 ,
b111111 4
b11111111 +
b11111111 1
b111111 '
b111111 3
b11111111 (
b11111111 0
0/
12
b11111111 -
b11111111 .
b110 #
b110 &
b0 $
b11111111 "
b11111111 %
#215
b1 !
b1 *
b1 )
b1 6
b11111 ,
b11111 4
b11111 '
b11111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#220
b0 !
b0 *
b0 )
b0 6
b1111 ,
b1111 4
b1111 '
b1111 3
b111111 +
b111111 1
b111111 (
b111111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#225
b1 !
b1 *
b1 )
b1 6
b11111 ,
b11111 4
b11111 '
b11111 3
b1111111 +
b1111111 1
b1111111 (
b1111111 0
1/
b11111111 -
b11111111 .
b111 #
b111 &
b0 $
b11111111 "
b11111111 %
#230
b0 !
b0 *
b0 )
b0 6
b1111 ,
b1111 4
b1111 '
b1111 3
b111111 +
b111111 1
b111111 (
b111111 0
b1111111 -
b1111111 .
b1 $
b1111111 "
b1111111 %
#235
b0 )
b0 6
b111 ,
b111 4
b111 '
b111 3
b11111 +
b11111 1
b11111 (
b11111 0
b111111 -
b111111 .
b10 $
b111111 "
b111111 %
#240
