$date
	Thu Oct 21 01:06:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 8 ! bus [7:0] $end
$var reg 1 " WE $end
$var reg 4 # address [3:0] $end
$var reg 8 $ catch [7:0] $end
$var reg 1 % clock $end
$var reg 8 & data_in [7:0] $end
$var integer 32 ' idx [31:0] $end
$var integer 32 ( seed [31:0] $end
$scope module DUT $end
$var wire 1 " WE $end
$var wire 4 ) address [3:0] $end
$var wire 8 * bus [7:0] $end
$var wire 1 % clock $end
$var wire 8 + data_in [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
b1000101100 (
bx '
bx &
0%
bx $
bx #
x"
bx !
$end
#5
1%
#10
b11111111 !
b11111111 *
b0 #
b0 )
b0 '
0"
0%
#15
1%
#20
b1 #
b1 )
b1 '
0%
#25
1%
#30
b10 #
b10 )
b10 '
0%
#35
1%
#40
b11 #
b11 )
b11 '
0%
#45
1%
#50
b100 #
b100 )
b100 '
0%
#55
1%
#60
b101 #
b101 )
b101 '
0%
#65
1%
#70
b110 #
b110 )
b110 '
0%
#75
1%
#80
b111 #
b111 )
b111 '
0%
#85
1%
#90
b1000 #
b1000 )
b1000 '
0%
#95
1%
#100
b1001 #
b1001 )
b1001 '
0%
#105
1%
#110
b1010 #
b1010 )
b1010 '
0%
#115
1%
#120
b1011 #
b1011 )
b1011 '
0%
#125
1%
#130
b1100 #
b1100 )
b1100 '
0%
#135
1%
#140
b1101 #
b1101 )
b1101 '
0%
#145
1%
#150
b1110 #
b1110 )
b1110 '
0%
#155
1%
#160
b1111 #
b1111 )
b1111 '
0%
#165
1%
#170
b100 &
b100 +
b10010010011111100100111101 (
b0 #
b0 )
1"
b0 '
0%
#175
b100 !
b100 *
1%
#180
b100000 &
b100000 +
b10010000001000011010111011011010 (
b11111111 !
b11111111 *
b1 #
b1 )
b1 '
b100 $
0%
#185
b100000 !
b100000 *
1%
#190
b10011111 &
b10011111 +
b11001111101101000001011010010011 (
b11111111 !
b11111111 *
b10 #
b10 )
b10 '
b100000 $
0%
#195
b10011111 !
b10011111 *
1%
#200
b11101 &
b11101 +
b10001110111011101000101010111000 (
b11111111 !
b11111111 *
b11 #
b11 )
b11 '
b10011111 $
0%
#205
b11101 !
b11101 *
1%
#210
b111001 &
b111001 +
b11100110010000110110101011001 (
b11111111 !
b11111111 *
b100 #
b100 )
b100 '
b11101 $
0%
#215
b111001 !
b111001 *
1%
#220
b1001110 &
b1001110 +
b10100111011001100001010101000110 (
b11111111 !
b11111111 *
b101 #
b101 )
b101 '
b111001 $
0%
#225
b1001110 !
b1001110 *
1%
#230
b10100010 &
b10100010 +
b1010001000110011001011100001111 (
b11111111 !
b11111111 *
b110 #
b110 )
b110 '
b1001110 $
0%
#235
b10100010 !
b10100010 *
1%
#240
b10101010 &
b10101010 +
b11010101001110001011101000000100 (
b11111111 !
b11111111 *
b111 #
b111 )
b111 '
b10100010 $
0%
#245
b10101010 !
b10101010 *
1%
#250
b10110011 &
b10110011 +
b1011001111000110010100100110101 (
b11111111 !
b11111111 *
b1000 #
b1000 )
b1000 '
b10101010 $
0%
#255
b10110011 !
b10110011 *
1%
#260
b1011010 &
b1011010 +
b10101101001101001011000001110010 (
b11111111 !
b11111111 *
b1001 #
b1001 )
b1001 '
0"
b10110011 $
0%
#265
1%
#270
b100001 &
b100001 +
b10000100110010001010101001011 (
b1010 #
b1010 )
b1010 '
b11111111 $
0%
#275
1%
#280
b1001011 &
b1001011 +
b100101111101011101110000010000 (
b1011 #
b1011 )
b1011 '
0%
#285
1%
#290
b1111100 &
b1111100 +
b10111110000111100000100011010001 (
b1100 #
b1100 )
b1100 '
0%
#295
1%
#300
b10011010 &
b10011010 +
b11001101010100001010110001011110 (
b1101 #
b1101 )
b1101 '
0%
#305
1%
#310
b1011101 &
b1011101 +
b101110101110001100110101000111 (
b1110 #
b1110 )
b1110 '
0%
#315
1%
#320
b110011 &
b110011 +
b10011001101011111111110011011100 (
b1111 #
b1111 )
b1111 '
0%
#325
1%
#330
b10000 '
0%
